int sx[4] = {0, 0, 1, -1};
int sy[4] = {1, -1, 0, 0};
int n = 8, m = 8; 
int book[8][8] = {0};
int map[8][8] = {{0, 0, 0, 0, 0, 0, 0, 1},
                 {1, 1, 1, 1, 1, 1, 1, 1},
                 {0, 0, 0, 0, 0, 0, 0, 0},
                 {1, 0, 1, 0, 1, 0, 1, 0},
                 {0, 1, 0, 1, 0, 1, 0, 1},
                 {0, 1, 0, 1, 0, 1, 0, 1},
                 {1, 0, 1, 0, 1, 0, 1, 0},
                 {1, 1, 1, 1, 1, 1, 1, 1}};

int check(int x, int y) {
    if (x < 0 || y < 0 || x > n || y > m || map[x][y] == 0 || book[x][y] == 1) {
        return 1;
    }
    return 0;
}

void dfs(int x, int y) {
    book[x][y] = 1;
    int i = 0, j = 0;
    while (i < 4) {
        int tx = x + sx[i], ty = y + sy[i];
        if (check(tx, ty)) {
            i++;
            continue;
        }
        dfs(tx, ty);
        i++;
    }
}

int main() {
    int i = 0, j = 0, ans = 0;
    while (i < n) {
        j = 0;
        while (j < m) {
            if (check(i, j) == 0) {
                dfs(i, j);
                ans = ans + 1;
            }
            j = j + 1;
        }
        i = i + 1;
    }
    return ans;
}